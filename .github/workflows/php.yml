name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # pulls all commits (needed for lerna / semantic release to correctly version)
        fetch-depth: "0"

    # pulls all tags (needed for lerna / semantic release to correctly version)
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
    - name: Run PHPUnit tests
      run: export XDEBUG_MODE=coverage && ./vendor/bin/phpunit --configuration=phpunit.xml.dist --coverage-clover ./build/coverage/log/clover.xml
      
    - uses: actions/checkout@v2
    - name: Upload Scrutinizer coverage
      uses: sudo-bot/action-scrutinizer@latest
      with:
        cli-args: "--format=php-clover build/coverage/log/clover.xml"


      # For code coverage report we are uploading our code coverage report to scrutinizer
    - name: Downloading scrutinizer ocular.phar
      run: composer global require scrutinizer/ocular
      
      # Uploading reports for analysis
    - name: Uploading code coverage to scrutinize
      run: ~/.composer/vendor/bin/ocular code-coverage:upload --format=php-clover ./build/coverage/log/coverage.xml
#      run: php ocular.phar code-coverage:upload --format=php-clover ./build/coverage/log/coverage.xml
